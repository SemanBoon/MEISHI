// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  email     String        @unique
  password  String
  name      String
  birthday  DateTime?
  cards     BusinessCard[]
  sharesSent    Share[]    @relation("sharesSent")
  sharesReceived Share[]   @relation("sharesReceived")
}

model BusinessCard {
  id           Int          @id @default(autoincrement())
  jobTitle     String?
  companyName  String?
  phoneNumber  String?
  customBio    String?
  bannerImageUrl String?
  profileImageUrl String?
  gradient       String?
  education      String?
  experience     String?       
  projects       String?
  email          String?       
  websites     Website[]
  socials      Social[]
  userId       Int
  user         User         @relation(fields: [userId], references: [id])
  shares       Share[]
}

model Share {
  id           Int            @id @default(autoincrement())
  cardId       Int
  card         BusinessCard   @relation(fields: [cardId], references: [id])
  fromUserId   Int
  fromUser     User           @relation("sharesSent", fields: [fromUserId], references: [id])
  toUserId     Int
  toUser       User           @relation("sharesReceived", fields: [toUserId], references: [id])
  createdAt    DateTime       @default(now())
}

model Website {
  id             Int           @id @default(autoincrement())
  url            String
  label          String
  businessCard   BusinessCard  @relation(fields: [businessCardId], references: [id])
  businessCardId Int
}

model Social {
  id             Int           @id @default(autoincrement())
  url            String
  platform       String
  businessCard   BusinessCard  @relation(fields: [businessCardId], references: [id])
  businessCardId Int
}
